// <auto-generated />
using System;
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FinalProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190426110916_seedGroup")]
    partial class seedGroup
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FinalProject.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int>("GroupID");

                    b.Property<string>("Name")
                        .HasMaxLength(40);

                    b.HasKey("ID");

                    b.HasIndex("GroupID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("FinalProject.Models.Doctor", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CourseID");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<string>("Hospital");

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<string>("Specialization");

                    b.Property<bool>("isDeleted");

                    b.HasKey("Code");

                    b.HasIndex("CourseID")
                        .IsUnique();

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("FinalProject.Models.GroupsSetup", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("ID");

                    b.ToTable("Groups");

                    b.HasData(
                        new { ID = 1, Code = "A", EndDate = new DateTime(2019, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified), StartDate = new DateTime(2019, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("FinalProject.Models.Student", b =>
                {
                    b.Property<int>("ZajelID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30);

                    b.Property<double>("GDPA");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<int>("GroupID");

                    b.Property<string>("LastName")
                        .HasMaxLength(30);

                    b.Property<int>("NumberOFHourse");

                    b.Property<bool>("Toofel");

                    b.HasKey("ZajelID");

                    b.HasIndex("GroupID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("FinalProject.Models.Course", b =>
                {
                    b.HasOne("FinalProject.Models.GroupsSetup", "Group")
                        .WithMany("Courses")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProject.Models.Doctor", b =>
                {
                    b.HasOne("FinalProject.Models.Course", "Course")
                        .WithOne("Doctor")
                        .HasForeignKey("FinalProject.Models.Doctor", "CourseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProject.Models.Student", b =>
                {
                    b.HasOne("FinalProject.Models.GroupsSetup", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
